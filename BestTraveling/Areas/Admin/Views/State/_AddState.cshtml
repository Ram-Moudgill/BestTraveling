@model BT_Model.AdminModel.StateModel

<div class="container-fluid">
    @using (Ajax.BeginForm("AddState", "State", new AjaxOptions { OnSuccess = "OnAddState", OnFailure = "OnFailsAddState" }, new { @class = "form-group", role = "form", @id = "frm_AddState" }))
    {
        <div class="row">
            <div class="col-md-4">
                <label>Name</label>
            </div>
            <div class="col-md-8">
                @Html.TextBoxFor(x => x.Name, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Name, string.Empty, new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="col-md-4">
                <label>Code</label>
            </div>
            <div class="col-md-8">
                @Html.TextBoxFor(x => x.Code, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Code, string.Empty, new { @class = "text-danger" })
            </div>
        </div>

        <div class="row">
            <div class="col-md-4">
                <label>Country</label>
            </div>
            <div class="col-md-8">
                @*@Html.DropDownListFor(x=>x.CountryId)*@
                @Html.TextBoxFor(x => x.CountryName, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Code, string.Empty, new { @class = "text-danger" })
            </div>
        </div>

        <div class="row pull-right my-1">
            <div>
                <input type="submit" value="Save" id="btn_SaveState" class="btn btn-primary mx-1" />
            </div>
            <div>
                <input type="button" id="btn_Close" data-dismiss="modal" value="Close" class="btn btn-primary mx-1" />
            </div>
        </div>
    }
</div>



<script src='@Url.Content("~/Scripts/jquery.validate.js")' type='text/javascript'></script>
<script src='@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")' type='text/javascript'></script>