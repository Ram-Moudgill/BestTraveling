@model BT_Model.AdminModel.OperatorModel
@{ 
    var countries = ViewBag.Countries;
    var states = ViewBag.States;
    var cities = ViewBag.Cities;
}
<div class="container-fluid">
    @using (Ajax.BeginForm("AddOperator", "Operator", new AjaxOptions { OnSuccess = "", OnFailure = "" }, new { @class = "form-group", id = "frm_AddOperator" }))
    {

        <div class="row">
            <div class="col-md-4">
                <label>Name</label>
            </div>
            <div class="col-md-8">
                @Html.TextBoxFor(x => x.Name, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Name, string.Empty, new { @class = "text-danger" })
            </div>
        </div>

        <div class="row">
            <div class="col-md-4">
                <label>Code</label>
            </div>
            <div class="col-md-8">
                @Html.TextBoxFor(x => x.Code, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Code, string.Empty, new { @class = "text-danger" })
            </div>
        </div>


        <div class="row">
            <div class="col-md-4">
                <label>Contact</label>
            </div>
            <div class="col-md-8">
                @Html.TextBoxFor(x => x.Contact, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Contact, string.Empty, new { @class = "text-danger" })
            </div>
        </div>


        <div class="row">
            <div class="col-md-4">
                <label>Country</label>
            </div>
            <div class="col-md-8">
                @Html.DropDownListFor(x => x.CountryId,new SelectList(countries,"Value","Text","--select country--") ,new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.CountryId, string.Empty, new { @class = "text-danger" })
            </div>
        </div>

        <div class="row">
            <div class="col-md-4">
                <label>State</label>
            </div>
            <div class="col-md-8">
                @Html.DropDownListFor(x => x.StateId, new SelectList(states, "Value", "Text", "--select state--"), new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.StateId, string.Empty, new { @class = "text-danger" })
            </div>
        </div>


        <div class="row">
            <div class="col-md-4">
                <label>City</label>
            </div>
            <div class="col-md-8">
                @Html.DropDownListFor(x => x.CityId, new SelectList(cities, "Value", "Text", "--select city--"), new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.CityId, string.Empty, new { @class = "text-danger" })
            </div>
        </div>


        <div class="row">
            <div class="col-md-4">
                <label>Address</label>
            </div>
            <div class="col-md-8">
                @Html.TextAreaFor(x => x.Address)
                @Html.ValidationMessageFor(x => x.Address, string.Empty, new { @class = "text-danger" })
            </div>
        </div>

        <div class="row">
            <div>
                <input type="submit" value="Save" id="btn_SaveOperator" class="btn btn-primary" />
            </div>
            <div>
                <input type="button" value="Close" id="btn_Close" class="btn btn-primary" />
            </div>
        </div>

    }
</div>
